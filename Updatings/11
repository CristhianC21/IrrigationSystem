import RPi.GPIO as GPIO
import spidev # To communicate with SPI devices
from numpy import interp  # To scale values
from time import sleep  # To add delay
from PCF8574 import PCF8574_GPIO
from Adafruit_LCD1602 import Adafruit_CharLCD
import Freenove_DHT as DHT

spi = spidev.SpiDev() # Created an object
spi.open(0,0)

DHTPin = 11     #define the pin of DHT11 
GPIO.setwarnings(False)
    
# Read MCP3008 data
def analogInput(channel):
    spi.max_speed_hz = 1350000
    adc = spi.xfer2([1,(8+channel)<<4,0])
    data = ((adc[1]&3) << 8) + adc[2]
    return data


      
def soilMoisture():
    output = analogInput(1) # Reading from CH0
    output = interp(output, [300, 1023], [100, 0])
    output = int(output)
    print("Moisture:", output, "%")
    sleep(2)
    return output

def lcdscreen():
    mcp.output(3,1)     # turn on LCD backlight
    lcd.begin(16,2)     # set number of LCD lines and columns
    while(True):         
      # lcd.clear()
        lcd.setCursor(1,0)  # set cursor position
        lcd.message( 'M: ' + str(soilMoisture())+'%' )# display CPU temperature
        sleep(1)
       
def loop():
   lcdscreen()  
    
def destroy():
    lcd.clear()
    GPIO.cleanup()

PCF8574_address = 0x27  # I2C address of the PCF8574 chip.
PCF8574A_address = 0x3F  # I2C address of the PCF8574A chip.    


try:
    mcp = PCF8574_GPIO(PCF8574_address)
except:
    try:
        mcp = PCF8574_GPIO(PCF8574A_address)
    except:
        print ('I2C Address Error !')
        exit(1)
# Create LCD, passing in MCP GPIO adapter.
lcd = Adafruit_CharLCD(pin_rs=0, pin_e=2, pins_db=[4,5,6,7], GPIO=mcp)
   
if __name__ == '__main__':
    print ('Program is starting ... ')
    try:
        loop()
    except KeyboardInterrupt:
        destroy()
    finally:
        destroy()


    